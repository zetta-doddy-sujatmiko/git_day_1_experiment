1. Rebase

With rebase someone can change commit message with 'reword' (example: I edited update 3 in feat/payment branch commit message), 
change which commit point a branch start branching from other branch (example: my feat/payment branch changed it's base from 1st commit of master to 11th commit of master), 
squashing many commit into one (example: I squashed commit in feat/payment branch)

2. Cherry Pick

With cherry pick someone can pull a specific commit on other branch by specifying that commit id, later, when the brach that one of its commit cherry picked merged, git notice it and brach merged normally
(example: I cherry picked a helper from branch bugfix/payment because main need that helper without entire bugfix/payment brach merged, then I merge bugfix/payment into main and it did merged normally)

3. Git Stash

Stage all changes (staged and unstaged) and save it on local storage. Then saved stash can be applied later and become unstaged code. If any conflict happen when stash apply, user need to resolve conflict

4. Pulling remote branch that not in local branch

Git fetch to get information from remote. Then create a new branch on local with remote branch as upstream (branch name can be same or different).